{"version":3,"sources":["styles/singleMessage.module.css","styles/addContact.module.css","styles/login.module.css","styles/themes.module.css","components/Login.js","components/Register.js","components/ConfirmRegistration.js","components/Navbar.js","functions/showTotalAusDollar.js","components/Home.js","components/SingleMessage.js","components/Messages.js","components/SingleAccount.js","components/TransferReceipt.js","components/TransferForm.js","components/Accounts.js","components/AddressBookContact.js","components/AddressBook.js","components/AddContact.js","components/Transfers.js","components/Settings.js","functions/showCurrentTime.js","App.js","index.js","styles/home.module.css","styles/singleAccount.module.css","styles/transferForm.module.css","styles/accounts.module.css","styles/confirmRegistration.module.css","styles/transferReceipt.module.css","styles/settings.module.css","styles/messages.module.css","styles/addressBook.module.css","styles/register.module.css","styles/navbar.module.css","styles/transfers.module.css"],"names":["module","exports","Login","useState","authorized","setAuthorized","noUserFound","setNoUserFound","checkUser","a","EMAIL","document","getElementById","PASSWORD","userDetails","email","value","password","fetchOptions","method","headers","body","JSON","stringify","fetch","response","json","length","click","className","styles","background","outerContainer","heading","innerContainer","emailAndPasswordDiv","htmlFor","inputBox","type","id","autoFocus","noUserFoundText","motion","button","animate","backgroundColor","color","transition","duration","repeat","Infinity","repeatType","loginButton","onClick","style","display","to","signUpText","signUpLink","Register","setErrorFromServer","registerUser","values","repeat_password","confirmPassword","status","validationSchemaFormik","yup","shape","required","min","max","oneOf","initialValues","validationSchema","validateOnMount","formik","form","labels","name","errorMsg","errorMessage","isValid","registerButton","registerButtonBlocked","loginText","loginLink","ConfirmRegistration","errorFromServer","Navbar","fontSize","theme","animations","unreadMessages","currentPage","fontSizeSml","fontSizeMed","fontSizeLge","navContainer","themedStyles","navList","logoLink","bankIcon","linkList","picked","div","initial","scale","unreadMessagesNav","e","window","confirm","preventDefault","showTotalAusDollar","total","parseFloat","toLocaleString","currency","Home","fontSizeXL","contentBox","welcome","delay","accountInfoBox","accountNameDiv","accountName","accountNameValue","accountTotalDiv","accountTotal","accountTotalValue","SingleMessage","handleRead","handleFavourite","handleDelete","read","favourite","message","timestamp","outerContainerReadFavourited","messageContainerReadFavourited","buttonsContainer","opacity","outerContainerRead","messageContainerRead","outerContainerFavourited","messageContainerFavourited","messageContainer","Messages","messages","messageItem","hidden","show","messageList","variants","staggerChildren","map","li","SingleAccount","accountNum","BSB","handleDeleteContact","handleSelectContact","accountBox","bottomHalf","accountDetailsAndDeleteDiv","accountDetails","event","deleteButton","TransferReceipt","transferTo","transferAmount","handleCloseReceipt","closeButton","transferredToName","TransferForm","setTransferAmount","insufficientFunds","transferReceipt","visibility","noVal","setNoVal","noContact","setNoContact","transferToDiv","amountDiv","dollarDiv","buttonDiv","transferFundsButton","INPUT_AMOUNT","isNaN","Accounts","accounts","setTransferTo","accountsList","account","listItem","totalFundsDiv","transferFormDiv","totalBox","reduce","accountsTotal","currentVal","AddressBookContact","AddressBook","contacts","contact","ownAccountDiv","contactDiv","Date","now","Math","random","AddContact","handleAddContact","panelOpen","setPanelOpen","contactName","matches","accNum","backgroundOpen","backgroundClosed","topPanelOpen","topPanelClosed","toggleButton","onSubmit","resetForm","contactInfo","nameDiv","BSBDiv","accountNumberDiv","addContactButton","disabled","Transfers","Settings","setFontSize","setTheme","setAnimations","DEVICE_WIDTH","documentElement","clientWidth","changeFontSize","val","screenModifier","changeTheme","toggleAnimations","settingsBox","fontSizeContainer","optionBoxTitle","optionBox","optionButton","fontWeight","themeContainer","animationsContainer","showCurrentTime","dateStyle","timeStyle","App","deviceWidth","setDeviceWidth","setInsufficientFunds","setTransferReceipt","localStorage","getItem","parse","setAccounts","setContacts","useEffect","setItem","setMessages","findUnreadMessages","filter","setUnreadMessages","i","checkName","split","path","pickedId","isSelected","findIndex","messagesCopy","stopPropagation","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3d2dc929.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"outerContainer\":\"singleMessage_outerContainer__13Jxq\",\"outerContainerRead\":\"singleMessage_outerContainerRead__27-_4\",\"outerContainerFavourited\":\"singleMessage_outerContainerFavourited__1umUD\",\"outerContainerReadFavourited\":\"singleMessage_outerContainerReadFavourited__1cvGp\",\"messageContainer\":\"singleMessage_messageContainer__28e3V\",\"messageContainerRead\":\"singleMessage_messageContainerRead__1kBnz\",\"messageContainerFavourited\":\"singleMessage_messageContainerFavourited__2TfxK\",\"messageContainerReadFavourited\":\"singleMessage_messageContainerReadFavourited__aJCco\",\"buttonsContainer\":\"singleMessage_buttonsContainer__tDBp6\",\"timestamp\":\"singleMessage_timestamp__2o7RF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backgroundOpen\":\"addContact_backgroundOpen__3go18\",\"backgroundClosed\":\"addContact_backgroundClosed__1pFb9\",\"topPanelOpen\":\"addContact_topPanelOpen__12eJL\",\"topPanelClosed\":\"addContact_topPanelClosed__2Zwru\",\"toggleButton\":\"addContact_toggleButton__1tg9M\",\"innerContainer\":\"addContact_innerContainer__17y9W\",\"nameDiv\":\"addContact_nameDiv__1hHJG\",\"BSBDiv\":\"addContact_BSBDiv__3-Hit\",\"accountNumberDiv\":\"addContact_accountNumberDiv__2E6zL\",\"inputBox\":\"addContact_inputBox__3tJ5c\",\"addContactButton\":\"addContact_addContactButton__3wC7b\",\"errorMessage\":\"addContact_errorMessage__3YCQZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"login_background__11QAV\",\"heading\":\"login_heading__1T6S8\",\"outerContainer\":\"login_outerContainer__1LfTE\",\"innerContainer\":\"login_innerContainer__1AXW8\",\"emailAndPasswordDiv\":\"login_emailAndPasswordDiv__VCSEL\",\"inputBox\":\"login_inputBox__18NOd\",\"loginButton\":\"login_loginButton__3wC_0\",\"signUpText\":\"login_signUpText__JfwNn\",\"signUpLink\":\"login_signUpLink__SVST_\",\"noUserFoundText\":\"login_noUserFoundText__3j2Pg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"yellow0\":\"themes_yellow0__3N3io\",\"yellow1\":\"themes_yellow1__1htUi\",\"yellow2\":\"themes_yellow2__3ijzY\",\"yellow3\":\"themes_yellow3__3tHSj\",\"blue0\":\"themes_blue0__4xb2a\",\"blue1\":\"themes_blue1__3MvWL\",\"blue2\":\"themes_blue2__1IivN\",\"blue3\":\"themes_blue3__2vNcz\",\"orange0\":\"themes_orange0__jhEmO\",\"orange1\":\"themes_orange1__4DCnB\",\"orange2\":\"themes_orange2__2D5In\",\"orange3\":\"themes_orange3__33Yhj\"};","import React, {useState} from 'react';\nimport {Link} from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\n\nimport styles from '../styles/login.module.css';\n\nconst Login = () => {\n\n    const [authorized, setAuthorized] = useState(false);\n    const [noUserFound, setNoUserFound] = useState(false);\n\n\n\n    const checkUser = async () => {\n\n        const EMAIL = document.getElementById('email');\n        const PASSWORD = document.getElementById('password');\n\n        const userDetails = {\n            email: EMAIL.value, \n            password: PASSWORD.value\n        };\n\n        const fetchOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(userDetails)\n        }\n\n        const response = await fetch('/find-user', fetchOptions);\n        const json = await response.json();\n\n        if (json.length > 0) {\n            setNoUserFound(false);\n            setAuthorized(true);\n        } else {\n            setNoUserFound(true);\n        }\n\n        // strange way to redirect to home page if authenticated\n        // works for now, try other method in future\n        const LOGIN_BUTTON = document.getElementById('login-button');\n        LOGIN_BUTTON.click();\n    };\n    \n    return (\n        <>\n            <div className={`${styles.background}`}>\n                <div className={`${styles.outerContainer}`}>\n                    <h1 className={`${styles.heading}`}>Banking Application</h1>\n                    <div className={`${styles.innerContainer}`}>\n                        <div className={`${styles.emailAndPasswordDiv}`}>\n                            <label htmlFor=\"email\">Email Address: </label>\n                            <input className={styles.inputBox}\n                                type=\"text\" id=\"email\" autoFocus/>\n                        </div>\n                        <div className={`${styles.emailAndPasswordDiv}`}>\n                            <label htmlFor=\"password\">Password: </label>\n                            <input className={styles.inputBox}\n                            type=\"password\" id=\"password\"/>\n                        </div>\n                        {noUserFound \n                        ? <div className={`${styles.noUserFoundText}`}>\n                          No user Found.  Please check your email and password or Sign Up.\n                          </div> : null}\n                        <motion.button\n                            animate={{ \n                                backgroundColor: [\"rgba(255, 204, 0, 0.9)\" ,\"rgba(0, 75, 150, 1)\", \"rgba(245, 141, 53, 1)\"], \n                                color: [\"rgb(0, 0, 0)\", \"rgb(255, 255, 255)\", \"rgb(0, 0, 0)\"]}}\n                                transition= {{ duration: 3, repeat: Infinity, repeatType: \"reverse\"}\n                            }\n                            className={`${styles.loginButton}`} \n                            onClick={checkUser}>\n                            Login\n                        </motion.button>\n                        <Link style={{display: \"none\"}}\n                        to={authorized ? \"/home-page\" : \"/login\"}\n                        id=\"login-button\" />\n                    </div>\n                    <p className={`${styles.signUpText}`}>Don't have an account?\n                    <Link to=\"/register-page\" className={`${styles.signUpLink}`}>Sign up</Link></p>\n                </div>\n            </div>\n        </>\n    )\n};\n\nexport default Login;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as yup from \"yup\";\n\nimport styles from '../styles/register.module.css';\n\nconst Register = ({setErrorFromServer}) => {\n\n    const registerUser = async (values) => {\n\n        const userDetails = {\n            email: values.email, \n            password: values.password,\n            repeat_password: values.confirmPassword,\n        };\n\n        const fetchOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(userDetails)\n        }\n\n        const response = await fetch('/register-user', fetchOptions);\n        const json = await response.json();\n\n        json.status === \"error\"\n        ? setErrorFromServer(true)\n        : setErrorFromServer(false);\n    };\n\n\n    const initialValuesFormik = {\n        email: '',\n        password: '',\n        confirmPassword: '',\n    }\n\n    const validationSchemaFormik = yup.object().shape({\n        email: yup.string()\n            .required('Required')\n            .email('Please enter a valid email address'),\n        password: yup.string()\n            .required('Required')\n            .min(3, 'Minimum length is 3 characters')\n            .max(8, 'Maximum length is 8 characters'),\n        confirmPassword: yup.string()\n            .required('Required')\n            .oneOf([yup.ref('password')], 'Passwords must match')\n    })\n\n    return (\n        <>\n            <div className={`${styles.background}`}>\n                <div className={`${styles.outerContainer}`}>\n                    <h1 className={`${styles.heading}`}>Create an Account</h1>\n                    <div className={`${styles.innerContainer}`}>\n                        <Formik\n                            initialValues={initialValuesFormik}\n                            validationSchema={validationSchemaFormik}\n                            validateOnMount>\n                            {formik => {\n                                return(\n                                    <Form className={styles.form}>\n                                        <div className={`${styles.emailAndPasswordDiv}`}>\n                                            <label\n                                                className={styles.labels} \n                                                htmlFor=\"email\">Email Address: </label>\n                                            <Field className={styles.inputBox}\n                                                type=\"text\" id=\"email\" name=\"email\" autoFocus/>\n                                        </div>\n                                        <ErrorMessage name=\"email\">\n                                            { (errorMsg) => \n                                            <div \n                                                className={styles.errorMessage}>\n                                                {errorMsg}\n                                            </div>}\n                                        </ErrorMessage>\n                                        <div className={`${styles.emailAndPasswordDiv}`}>\n                                            <label className={styles.labels} \n                                                htmlFor=\"password\">Password: </label>\n                                            <Field className={styles.inputBox}\n                                                type=\"password\" id=\"password\" name=\"password\"/>\n                                        </div>\n                                        <ErrorMessage name=\"password\">\n                                            { (errorMsg) => \n                                            <div \n                                                className={styles.errorMessage}>\n                                                {errorMsg}\n                                            </div>}\n                                        </ErrorMessage>\n                                        <div className={`${styles.emailAndPasswordDiv}`}>\n                                            <label className={styles.labels} \n                                                htmlFor=\"confirmPassword\">Confirm Password: </label>\n                                            <Field className={styles.inputBox} \n                                                type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\"/>\n                                        </div>\n                                        <ErrorMessage name=\"confirmPassword\">\n                                            { (errorMsg) => \n                                            <div \n                                                className={styles.errorMessage}>\n                                                {errorMsg}\n                                            </div>}\n                                        </ErrorMessage>\n                                        {formik.isValid\n                                        ? <Link to=\"/confirm-registration-page\" \n                                        className={`${styles.registerButton}`}\n                                        onClick={() => registerUser(formik.values)}>Register Account</Link>\n                                        : <div className={`${styles.registerButtonBlocked}`}>\n                                            Register Account\n                                        </div>\n                                        }\n                                    </Form>\n                                )\n                            }}\n                        </Formik>         \n                    </div>\n                    <p className={`${styles.loginText}`}>Already have an account?\n                        <Link to=\"/login\" className={`${styles.loginLink}`} >Login</Link>\n                    </p>\n                </div>\n            </div>\n        </>\n    )\n};\n\nexport default Register;\n\n\n\n/* \n\n\n\nimport React, {useState} from 'react';\nimport {Link} from \"react-router-dom\";\n\nimport styles from '../styles/register.module.css';\n\nconst Register = ({setErrorFromServer}) => {\n\n    const [validInfo, setValidInfo] = useState(false);\n    const [invalidEmail, setInvalidEmail] = useState(false);\n    const [invalidPassword, setInvalidPassword] = useState(false);\n    const [invalidConfirmedPassword, setInvalidConfirmedPassword] = useState(false);\n\n    const EMAIL = document.getElementById('email');\n    const PASSWORD = document.getElementById('password');\n    const CONFIRM_PASSWORD = document.getElementById('confirm-password');\n\n    const checkInfo = () => {\n        if (EMAIL.value === '') {\n            setInvalidEmail(true)\n            setValidInfo(false)\n        } else if (PASSWORD.value.length < 3 | PASSWORD.value.length > 8) {\n            setInvalidEmail(false)\n            setInvalidPassword(true)\n            setValidInfo(false)\n        } else if (PASSWORD.value !== CONFIRM_PASSWORD.value) {\n            setInvalidEmail(false)\n            setInvalidPassword(false)\n            setInvalidConfirmedPassword(true)\n            setValidInfo(false)\n        } else {\n            setInvalidEmail(false)\n            setInvalidPassword(false)\n            setInvalidConfirmedPassword(false)\n            setValidInfo(true)\n        }\n    };\n\n    const registerUser = async () => {\n\n        const userDetails = {\n                email: EMAIL.value, \n                password: PASSWORD.value,\n                repeat_password: CONFIRM_PASSWORD.value,\n        };\n\n        const fetchOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(userDetails)\n        }\n\n        const response = await fetch('/register-user', fetchOptions);\n        const json = await response.json();\n\n        json.status === \"error\"\n        ? setErrorFromServer(true)\n        : setErrorFromServer(false);\n    };\n\n\n    return (\n        <>\n            <div className={`${styles.background}`}>\n                <div className={`${styles.outerContainer}`}>\n                    <h1 className={`${styles.heading}`}>Create an Account</h1>\n                    <div className={`${styles.innerContainer}`}>\n                        <div className={`${styles.emailAndPasswordDiv}`}\n                        onChange={checkInfo}>\n                            <label\n                                className={styles.labels} \n                                htmlFor=\"email\">Email Address: </label>\n                            <input className={styles.inputBox}\n                                type=\"text\" id=\"email\" autoFocus/>\n                        </div>\n                        {invalidEmail\n                        ? <div>Please enter correct email address</div>\n                        : null}\n                        <div className={`${styles.emailAndPasswordDiv}`}\n                        onChange={checkInfo}>\n                            <label className={styles.labels} \n                                htmlFor=\"password\">Password: </label>\n                            <input className={styles.inputBox}\n                                type=\"password\" id=\"password\"/>\n                        </div>\n                        {invalidPassword\n                        ? <div>Password must be between 3 and 8 characters</div>\n                        : null}\n                        <div className={`${styles.emailAndPasswordDiv}`}\n                        onChange={checkInfo}>\n                            <label className={styles.labels} \n                                htmlFor=\"confirm-password\">Confirm Password: </label>\n                            <input className={styles.inputBox} \n                                type=\"password\" id=\"confirm-password\"/>\n                        </div>\n                        {invalidConfirmedPassword\n                        ? <div>Passwords do not match</div>\n                        : null}\n                        {validInfo \n                        ? <Link to=\"/confirm-registration-page\" \n                        className={`${styles.registerButton}`}\n                        onClick={registerUser}>Register Account</Link>\n                        : <div className={`${styles.registerButtonBlocked}`}>\n                            Register Account\n                        </div>\n                        }\n                    </div>\n                    <p className={`${styles.loginText}`}>Already have an account?\n                        <Link to=\"/login\" className={`${styles.loginLink}`} >Login</Link>\n                    </p>\n                </div>\n            </div>\n        </>\n    )\n};\n\nexport default Register;\n\n\n\n*/","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport styles from '../styles/confirmRegistration.module.css';\r\n\r\nconst ConfirmRegistration = ({errorFromServer}) => {\r\n\r\n    return (\r\n        <>\r\n            <div className={`${styles.background}`}>\r\n                <div className={`${styles.outerContainer}`}>\r\n                    {errorFromServer \r\n                    ? <div className={`${styles.heading}`}>There was an error. Please try again.</div>\r\n                    : <div className={`${styles.heading}`}>Account creation successful!</div>}\r\n                    <Link to=\"/login\" className={`${styles.loginLink}`}>Back to Login page</Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ConfirmRegistration;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport { motion } from 'framer-motion';\r\n\r\nimport styles from '../styles/navbar.module.css';\r\nimport themedStyles from '../styles/themes.module.css';\r\n\r\nconst Navbar = ({fontSize, theme, animations,\r\n    unreadMessages, currentPage}) => {\r\n\r\n    // font sizes used in this component\r\n    const fontSizeSml = {fontSize: `${fontSize[0]}`};\r\n    const fontSizeMed = {fontSize: `${fontSize[1]}`};\r\n    const fontSizeLge = {fontSize: `${fontSize[2]}`};\r\n\r\n    const doubleCheckSignOut = (e) => {\r\n        if (!window.confirm(\"Are you sure you want to sign out?\")) {\r\n            e.preventDefault();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={`${styles.navContainer} ${themedStyles[theme[2]]} ${themedStyles[theme[3]]}`}>\r\n            <ul className={`${styles.navList}`}>\r\n                <li className={`${styles.logoLink} ${themedStyles[theme[2]]}`}>\r\n                     <i className={`fas fa-piggy-bank fa-2x ${styles.bankIcon}`}></i>\r\n                </li>\r\n                <Link to=\"/home-page\" \r\n                    className={\r\n                        currentPage === \"home-page\" \r\n                        ? `${styles.linkList} ${styles.picked}`\r\n                        : `${styles.linkList}`}\r\n                    style={fontSizeLge}>Home\r\n                </Link>\r\n                <Link to=\"/messages-page\" \r\n                    className={\r\n                        currentPage === \"messages-page\" \r\n                        ? `${styles.linkList} ${styles.picked}`\r\n                        : `${styles.linkList}`}\r\n                    style={fontSizeMed}>Messages\r\n                    {unreadMessages > 0 \r\n                    ? <motion.div \r\n                        initial={animations ? { scale: 1 } : null}\r\n                        animate={animations ? {scale: 1.3 } : null}\r\n                        transition={animations ? { duration: 0.5, repeat: Infinity, repeatType: \"reverse\" } : null}\r\n                        className={styles.unreadMessagesNav}\r\n                        style={fontSizeSml}>\r\n                            {unreadMessages}\r\n                      </motion.div>\r\n                    : null}\r\n                </Link>\r\n                <Link to=\"/accounts-page\" \r\n                    className={\r\n                        currentPage === \"accounts-page\" \r\n                        ? `${styles.linkList} ${styles.picked}`\r\n                        : `${styles.linkList}`}\r\n                    style={fontSizeMed}>Accounts\r\n                </Link>\r\n                <Link to=\"/transfers-page\" \r\n                    className={\r\n                        currentPage === \"transfers-page\" \r\n                        ? `${styles.linkList} ${styles.picked}`\r\n                        : `${styles.linkList}`}\r\n                    style={fontSizeMed}>Transfers\r\n                </Link>\r\n                <Link to=\"/settings-page\" \r\n                    className={\r\n                        currentPage === \"settings-page\" \r\n                        ? `${styles.linkList} ${styles.picked}`\r\n                        : `${styles.linkList}`}\r\n                    style={fontSizeMed}>Settings\r\n                </Link>\r\n                <Link\r\n                    onClick={doubleCheckSignOut}\r\n                    to=\"/\"\r\n                    className={`${styles.linkList}`}\r\n                    style={fontSizeMed}>Logout\r\n                </Link>\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Navbar;\r\n","\r\nconst showTotalAusDollar = (total) => {\r\n        return parseFloat(total).toLocaleString('en-AU', {style: 'currency', currency: 'AUD'});\r\n};\r\n\r\nexport default showTotalAusDollar;","import React from 'react';\r\nimport { motion } from \"framer-motion\";\r\n\r\n// import components\r\nimport Navbar from './Navbar';\r\n\r\nimport showTotalAusDollar from '../functions/showTotalAusDollar.js';\r\n\r\nimport themedStyles from '../styles/themes.module.css';\r\nimport styles from '../styles/home.module.css';\r\n\r\nconst Home = ({fontSize, theme, animations, unreadMessages, total, name}) => {\r\n\r\n    // font sizes used in this component\r\n    const fontSizeLge = {fontSize: `${fontSize[2]}`};\r\n    const fontSizeXL = {fontSize: `${fontSize[3]}`};\r\n\r\n    return (\r\n        <>\r\n            <Navbar\r\n            fontSize={fontSize}\r\n            theme={theme}\r\n            animations={animations}\r\n            unreadMessages={unreadMessages}\r\n            currentPage={\"home-page\"}/>\r\n            <div className={`${styles.background} ${themedStyles[theme[0]]} ${themedStyles[theme[3]]}`}>\r\n                <div className={`${styles.contentBox} ${themedStyles[theme[0]]}`}>\r\n                    <motion.div \r\n                        initial={animations ? { scale: 0.6 } : null}\r\n                        animate={animations ? { scale: 1 }: null}\r\n                        transition={{ duration: 0.35 }}\r\n                        className={`${styles.welcome}`}\r\n                        style={fontSizeXL}>\r\n                        Welcome\r\n                    </motion.div>\r\n                    <motion.div\r\n                        initial={animations ? { scale: 0.6 } : null}\r\n                        animate={animations ? { scale: 1 } : null}\r\n                        transition={{ duration: 0.35, delay: 0.05 }}\r\n                        className={`${styles.accountInfoBox} ${themedStyles[theme[1]]}`}>\r\n                        <div className={`${styles.accountNameDiv}`}>\r\n                            <div className={`${styles.accountName}`}\r\n                            style={fontSizeLge}>Account Name:</div> \r\n                            <div className={`${styles.accountNameValue}`}\r\n                            style={fontSizeLge}>\r\n                                {name}</div>\r\n                        </div>\r\n                        <div className={`${styles.accountTotalDiv}`}>\r\n                            <div className={`${styles.accountTotal}`}\r\n                            style={fontSizeLge}>Total:</div> \r\n                            <div className={`${styles.accountTotalValue}`}\r\n                            style={fontSizeLge}>\r\n                                {showTotalAusDollar(total)}</div>\r\n                        </div>\r\n                    </motion.div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nimport styles from '../styles/singleMessage.module.css';\r\nimport themedStyles from '../styles/themes.module.css';\r\n\r\n\r\nconst SingleMessage = ({fontSize, theme, id, \r\n    handleRead, handleFavourite, handleDelete, \r\n    read, favourite, message,\r\n    timestamp }) => {\r\n\r\n    // font sizes used in this component\r\n    const fontSizeSml = {fontSize: `${fontSize[0]}`};\r\n    const fontSizeMed = {fontSize: `${fontSize[1]}`};\r\n\r\n    if (read && favourite) {\r\n        return (\r\n            <>\r\n            <div className={`${styles.outerContainerReadFavourited} ${themedStyles[theme[1]]}`}>\r\n                <div className={styles.messageContainerReadFavourited}\r\n                style={fontSizeMed}>\r\n                    {message}\r\n                    <div className={styles.timestamp} style={fontSizeSml}>\r\n                        {timestamp}\r\n                    </div>\r\n                </div>\r\n                <div className={styles.buttonsContainer}>\r\n                    <i className=\"fab fa-readme fa-2x\" style={{opacity: 0.5}} onClick={() => handleRead(id)}></i>\r\n                    <i className=\"fas fa-star fa-2x\" style={{opacity: 0.5}} onClick={() => handleFavourite(id)}></i>\r\n                    <i className=\"fas fa-trash-alt fa-2x\" onClick={() => handleDelete(id)}></i>\r\n                </div>\r\n            </div>\r\n        </>\r\n        )\r\n    }\r\n\r\n    if (read) {\r\n        return (\r\n            <>\r\n            <div className={`${styles.outerContainerRead} ${themedStyles[theme[1]]}`}>\r\n                <div className={styles.messageContainerRead}\r\n                style={fontSizeMed}>\r\n                    {message}\r\n                    <div className={styles.timestamp} style={fontSizeSml}>\r\n                        {timestamp}\r\n                    </div>\r\n                </div>\r\n                <div className={styles.buttonsContainer}>\r\n                    <i className=\"fab fa-readme fa-2x\" style={{opacity: 0.5}} onClick={() => handleRead(id)}></i>\r\n                    <i className=\"fas fa-star fa-2x\" onClick={() => handleFavourite(id)}></i>\r\n                    <i className=\"fas fa-trash-alt fa-2x\" onClick={() => handleDelete(id)}></i>\r\n                </div>\r\n            </div>\r\n        </>\r\n        )\r\n    }\r\n\r\n    if (favourite) {\r\n        return (\r\n            <>\r\n            <div className={`${styles.outerContainerFavourited} ${themedStyles[theme[1]]}`}>\r\n                <div className={styles.messageContainerFavourited}\r\n                style={fontSizeMed}>\r\n                    {message}\r\n                    <div className={styles.timestamp} style={fontSizeSml}>\r\n                        {timestamp}\r\n                    </div>\r\n                </div>\r\n                <div className={styles.buttonsContainer}>\r\n                    <i className=\"fab fa-readme fa-2x\" onClick={() => handleRead(id)}></i>\r\n                    <i className=\"fas fa-star fa-2x\" style={{opacity: 0.5}} onClick={() => handleFavourite(id)}></i>\r\n                    <i className=\"fas fa-trash-alt fa-2x\" onClick={() => handleDelete(id)}></i>\r\n                </div>\r\n            </div>\r\n        </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`${styles.outerContainer} ${themedStyles[theme[1]]}`}>\r\n                <div className={styles.messageContainer}\r\n                style={fontSizeMed}>\r\n                    {message}\r\n                    <div className={styles.timestamp} style={fontSizeSml}>\r\n                        {timestamp}\r\n                    </div>\r\n                </div>\r\n                <div className={styles.buttonsContainer}>\r\n                    <i className=\"fab fa-readme fa-2x\" onClick={() => handleRead(id)}></i>\r\n                    <i className=\"fas fa-star fa-2x\" onClick={() => handleFavourite(id)}></i>\r\n                    <i className=\"fas fa-trash-alt fa-2x\" onClick={() => handleDelete(id)}></i>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default SingleMessage;","import React from 'react';\r\nimport { motion } from \"framer-motion\";\r\n\r\n// import components\r\nimport Navbar from './Navbar';\r\nimport SingleMessage from './SingleMessage';\r\n\r\nimport themedStyles from '../styles/themes.module.css'\r\nimport styles from '../styles/messages.module.css';\r\n\r\nconst Messages = ({fontSize, theme, animations, \r\n    messages, unreadMessages, \r\n    handleRead, handleFavourite, handleDelete}) => {\r\n\r\n    // font sizes used in this component\r\n    const fontSizeXL = {fontSize: `${fontSize[3]}`};\r\n\r\n\r\n    // for message fade in animations\r\n    const container = {\r\n        show: {\r\n            transition: {\r\n                staggerChildren: 0.1\r\n            }\r\n        }\r\n    }\r\n    const messageItem = {\r\n        hidden: {opacity: 0},\r\n        show: {opacity: 1}\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar\r\n            fontSize={fontSize}\r\n            theme={theme}\r\n            animations={animations}\r\n            unreadMessages={unreadMessages}\r\n            currentPage={\"messages-page\"}/> \r\n            <div className={`${styles.background} ${themedStyles[theme[0]]} ${themedStyles[theme[3]]}`}>\r\n                <ul className={`${styles.messageList} ${themedStyles[theme[1]]}`}>\r\n                <div style={fontSizeXL}\r\n                            className={`${styles.heading} ${themedStyles[theme[2]]}`}>Messages</div>\r\n                <motion.div\r\n                    initial=\"hidden\"\r\n                    animate=\"show\"\r\n                    variants={animations ? container : null}>\r\n                    {messages.map(message => \r\n                        <motion.li \r\n                            variants={animations ? messageItem : null}\r\n                            key={message.id}\r\n                            className={`${styles.messageContainer}`}\r\n                        >\r\n                        <SingleMessage \r\n                            fontSize={fontSize}\r\n                            theme={theme}\r\n                            handleRead={handleRead} \r\n                            handleFavourite={handleFavourite} \r\n                            handleDelete={handleDelete} \r\n                            message={message.message}\r\n                            id={message.id}\r\n                            read={message.read}\r\n                            favourite={message.favourite}\r\n                            timestamp={message.timestamp}/>\r\n                        </motion.li>\r\n                    )} \r\n                </motion.div>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Messages;\r\n","import React from 'react';\r\n\r\nimport showTotalAusDollar from '../functions/showTotalAusDollar.js';\r\n\r\nimport styles from '../styles/singleAccount.module.css';\r\nimport themedStyles from '../styles/themes.module.css';\r\n\r\nconst SingleAccount = ( { theme, fontSize, id, name, accountNum, BSB, total,\r\n    handleDeleteContact, handleSelectContact }) => {\r\n\r\n    // font sizes used in this component\r\n    const fontSizeMed = {fontSize: `${fontSize[1]}`};\r\n    const fontSizeLge = {fontSize: `${fontSize[2]}`};\r\n\r\n    return (\r\n        <>\r\n            <div className={`${styles.accountBox} ${themedStyles[theme[1]]}`}\r\n                onClick={name === \"Everyday Spending\"\r\n                ? null\r\n                : () => handleSelectContact(name)}>\r\n                <div className={styles.accountName}>\r\n                    <h3 style={fontSizeLge}>Account Name: </h3>\r\n                    <p style={fontSizeLge}>{name}</p>\r\n                </div>\r\n                <div className={styles.bottomHalf}>\r\n                    <div className={styles.accountDetailsAndDeleteDiv}>\r\n                        <div className={styles.accountDetails}>\r\n                            <p style={fontSizeMed} className={styles.BSB}> BSB: {BSB}</p>\r\n                            <p style={fontSizeMed} className={styles.accountNum}> Acc. Number: {accountNum}</p>\r\n                        </div>\r\n                        {name !== \"Everyday Spending\" && name !== \"Savings Account\"\r\n                        ?   <button \r\n                                id=\"delete-button\"\r\n                                onClick={(event) => handleDeleteContact(id, event)}\r\n                                className={styles.deleteButton}>\r\n                                <i className=\"fas fa-trash-alt fa-2x\"></i>\r\n                            </button>\r\n                        : null}\r\n                    </div>\r\n                    <div className={styles.accountTotal}>\r\n                        <h6 style={fontSizeLge}> Total Funds: </h6>\r\n                        <p style={fontSizeLge}>{showTotalAusDollar(total)}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default SingleAccount;\r\n","import React from 'react';\r\n\r\nimport showTotalAusDollar from '../functions/showTotalAusDollar.js';\r\n\r\nimport styles from '../styles/transferReceipt.module.css';\r\n\r\nconst TransferReceipt = ( { fontSize, \r\n    transferTo, \r\n    transferAmount,\r\n    handleCloseReceipt }) => {\r\n\r\n    // font sizes used in this component\r\n    const fontSizeLge = {fontSize: `${fontSize[2]}`};\r\n    const fontSizeXL = {fontSize: `${fontSize[3]}`};\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.background}>\r\n                <div className={styles.outerContainer}>\r\n                    <button\r\n                        className={styles.closeButton} \r\n                        onClick={() => handleCloseReceipt()}>X</button>\r\n                    <div className={styles.innerContainer}>\r\n                        <div\r\n                            style={fontSizeLge}>\r\n                            You transferred: \r\n                        </div>\r\n                        <p style={fontSizeXL}>\r\n                            {showTotalAusDollar(transferAmount)}\r\n                        </p>\r\n                        <div \r\n                            style={fontSizeLge}>\r\n                            to:\r\n                        </div>\r\n                        <div \r\n                            style={fontSizeXL}\r\n                            className={styles.transferredToName}>\r\n                                {transferTo}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default TransferReceipt;\r\n","import React, {useState} from 'react';\r\n\r\nimport TransferReceipt from './TransferReceipt';\r\n\r\nimport styles from '../styles/transferForm.module.css';\r\nimport themedStyles from '../styles/themes.module.css';\r\n\r\n\r\nconst TransferForm = ({theme, fontSize, transferTo, \r\n    transferAmount, setTransferAmount,\r\n    insufficientFunds,\r\n    transferReceipt,\r\n    handleCloseReceipt\r\n    }) => {\r\n\r\n    // font sizes used in this component\r\n    const fontSizeMed = {fontSize: `${fontSize[1]}`};\r\n    const fontSizeLge = {fontSize: `${fontSize[2]}`};\r\n\r\n    const [noVal, setNoVal] = useState({color: \"red\", visibility: \"hidden\"});\r\n    const [noContact, setNoContact] = useState({color: \"red\", visibility: \"hidden\"});\r\n\r\n    const submitTransferAmount = () => {\r\n\r\n        const INPUT_AMOUNT = document.getElementById('amount');\r\n\r\n        if (INPUT_AMOUNT.value === '' || isNaN(INPUT_AMOUNT.value)) {\r\n            setNoVal({color: \"red\", display: \"block\", fontSize: `${fontSize[1]}`})\r\n        } else {\r\n            setNoVal({color: \"red\", display: \"none\"})\r\n            setTransferAmount(INPUT_AMOUNT.value)\r\n            INPUT_AMOUNT.value = '';\r\n        }\r\n\r\n        if (transferTo === '') {\r\n            setNoContact({color: \"red\", visibility: \"visible\", fontSize: `${fontSize[1]}`})\r\n        } else {\r\n            setNoContact({color: \"red\", visibility: \"hidden\"})\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={`${styles.background} ${themedStyles[theme[1]]}`}>\r\n            <div className={styles.transferToDiv}>\r\n                <p style={fontSizeLge}>Transferring to: </p>\r\n                <h3 className = {styles.transferTo}\r\n                style={fontSizeLge}> {transferTo} </h3>\r\n            </div>\r\n                <p style={noContact}>Error: No contact selected to transfer to</p>\r\n            <div className={styles.bottomHalf}>\r\n                <div className={styles.amountDiv}>\r\n                    <label style={fontSizeMed} htmlFor=\"amount\">Amount: </label>\r\n                    <div className={styles.dollarDiv}>\r\n                        $<input className={styles.inputBox} type=\"text\" id=\"amount\"/>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.buttonDiv}>\r\n                    <button value=\"Send Transfer\"\r\n                        className={styles.transferFundsButton}\r\n                        style={fontSizeMed}\r\n                        onClick={submitTransferAmount}>Transfer Funds</button>\r\n                </div>\r\n            </div>\r\n            <p style={noVal}>Error: Please enter valid transfer value</p>\r\n            {insufficientFunds \r\n            ? <p style={{color: \"red\", fontSize: `${fontSize[1]}`}}>Error: Insufficient Funds for transfer</p>\r\n            : <p style={{display: \"none\"}}>Error: Insufficient Funds for transfer</p>}\r\n            {transferReceipt && <TransferReceipt\r\n                fontSize={fontSize}\r\n                transferTo={transferTo}\r\n                transferAmount={transferAmount || 0}\r\n                handleCloseReceipt={handleCloseReceipt}/>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TransferForm;\r\n","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\n// import components\r\nimport Navbar from './Navbar';\r\nimport SingleAccount from './SingleAccount';\r\nimport TransferForm from './TransferForm';\r\n\r\nimport showTotalAusDollar from '../functions/showTotalAusDollar.js';\r\n\r\nimport styles from '../styles/accounts.module.css';\r\nimport themedStyles from '../styles/themes.module.css';\r\n\r\nconst Accounts = ( {fontSize, theme, animations,\r\n    accounts, unreadMessages,\r\n    transferTo, setTransferTo, \r\n    transferAmount, setTransferAmount,\r\n    insufficientFunds,\r\n    transferReceipt,\r\n    handleCloseReceipt,\r\n    handleSelectContact}) => {\r\n\r\n\r\n    // font sizes used in this component\r\n    const fontSizeXL = {fontSize: `${fontSize[3]}`};\r\n\r\n    const chooseTransfer = (name) => {\r\n        setTransferTo(name);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Navbar\r\n                fontSize={fontSize}\r\n                theme={theme}\r\n                animations={animations}\r\n                unreadMessages={unreadMessages}\r\n                currentPage={\"accounts-page\"}/>\r\n            <div className={`${styles.background} ${themedStyles[theme[0]]} ${themedStyles[theme[3]]}`}>\r\n                <ul className={`${styles.accountsList} ${themedStyles[theme[1]]}`}>\r\n                    <div style={fontSizeXL}\r\n                        className={`${styles.heading} ${themedStyles[theme[2]]}`}>Accounts</div>\r\n                    <motion.div\r\n                        initial={animations ? {opacity: 0} : null}\r\n                        animate={animations ? {\r\n                            opacity: 1,\r\n                            transition: {duration: 0.5}\r\n                        } : null}>\r\n                        {accounts.map(account => \r\n                            <li \r\n                            className={styles.listItem}\r\n                                key={account.id}\r\n                                onClick={() => chooseTransfer(account.name)}\r\n                            >\r\n                            <SingleAccount \r\n                                fontSize={fontSize}\r\n                                name={account.name}\r\n                                accountNum={account.accountNum}\r\n                                BSB={account.BSB}\r\n                                total={account.total}\r\n                                theme={theme}\r\n                                handleSelectContact={handleSelectContact}\r\n                            />\r\n                            </li>\r\n                            )} \r\n                    </motion.div>\r\n                    <motion.div \r\n                        initial={animations ? {opacity: 0} : null}\r\n                        animate={animations ? {\r\n                            opacity: 1,\r\n                            transition: {delay: 0.2, duration: 1}\r\n                        } : null}\r\n                        className={styles.totalFundsDiv}>\r\n                        <div className={styles.transferFormDiv}>\r\n                            <TransferForm \r\n                                theme={theme}\r\n                                transferTo={transferTo}\r\n                                fontSize={fontSize}\r\n                                transferAmount={transferAmount}\r\n                                setTransferAmount={setTransferAmount}\r\n                                insufficientFunds={insufficientFunds}\r\n                                transferReceipt={transferReceipt}\r\n                                handleCloseReceipt={handleCloseReceipt}/>\r\n                        </div>\r\n                        <div className={`${styles.totalBox} ${themedStyles[theme[1]]}`}>\r\n                            <p style={fontSizeXL}>Total Funds: </p>\r\n                            <p style={fontSizeXL}>{showTotalAusDollar(\r\n                                accounts.reduce((accountsTotal, currentVal) => \r\n                                accountsTotal.total + currentVal.total)\r\n                                )}</p>\r\n                        </div>\r\n                    </motion.div>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Accounts;","import React from 'react';\r\n\r\nimport SingleAccount from './SingleAccount.js';\r\n\r\nconst AddressBookContact = ({theme, fontSize, \r\n    name, accountNum, BSB, total, id,\r\n    handleDeleteContact,\r\n    handleSelectContact}) => {\r\n\r\n    return (\r\n        <div>\r\n           <SingleAccount \r\n            theme={theme}\r\n            id={id}\r\n            name={name}\r\n            accountNum={accountNum}\r\n            BSB={BSB}\r\n            total={total}\r\n            fontSize={fontSize}\r\n            handleDeleteContact={handleDeleteContact}\r\n            handleSelectContact={handleSelectContact}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AddressBookContact;","import React from 'react';\r\nimport { motion } from \"framer-motion\";\r\n\r\n// import components\r\nimport AddressBookContact from './AddressBookContact';\r\n\r\nimport styles from '../styles/addressBook.module.css';\r\nimport themedStyles from '../styles/themes.module.css';\r\n\r\nconst AddressBook = ({theme, fontSize, animations,\r\n    contacts,\r\n    handleDeleteContact,\r\n    handleSelectContact}) => {\r\n\r\n    // font sizes used in this component\r\n    const fontSizeXL = {fontSize: `${fontSize[3]}`};\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <div style={fontSizeXL}\r\n                className={`${styles.heading} ${themedStyles[theme[2]]}`}>Address Book</div>\r\n                    <motion.div\r\n                        initial={animations ? {opacity: 0} : null}\r\n                        animate={animations ? {\r\n                            opacity: 1,\r\n                            transition: {duration: 0.5}\r\n                        } : null}>\r\n                        {contacts.map(contact => \r\n                            <div className={contact.name === \"Everyday Spending\"\r\n                                ? styles.ownAccountDiv\r\n                                : styles.contactDiv} \r\n                                key={Date.now()*Math.random(1)}>\r\n                                <AddressBookContact \r\n                                    theme={theme}\r\n                                    fontSize={fontSize}\r\n                                    id={contact.id}\r\n                                    name={contact.name}\r\n                                    accountNum={contact.accountNum}\r\n                                    BSB={contact.BSB}\r\n                                    total={contact.total}\r\n                                    handleDeleteContact={handleDeleteContact}\r\n                                    handleSelectContact={handleSelectContact}\r\n                                    />\r\n                            </div>)\r\n                        }\r\n                    </motion.div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\nexport default AddressBook;\r\n","import React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport styles from '../styles/addContact.module.css';\r\nimport themedStyles from '../styles/themes.module.css';\r\n\r\nconst AddContact = ({theme, fontSize, animations,\r\n    handleAddContact\r\n    }) => {\r\n\r\n    // font sizes used in this component\r\n    const fontSizeSml = {fontSize: `${fontSize[0]}`};\r\n    const fontSizeMed = {fontSize: `${fontSize[1]}`};\r\n    const fontSizeLge = {fontSize: `${fontSize[2]}`};\r\n\r\n    const [panelOpen, setPanelOpen] = useState(false);\r\n    const togglePanel = () => {\r\n        setPanelOpen(!panelOpen)\r\n    }\r\n\r\n\r\n    // for form validation with formik and yup\r\n    let validationSchemaFormik = yup.object().shape({\r\n        contactName: yup.string()\r\n        .required('Required')\r\n        .min(2, 'Name must be at least 2 characters')\r\n        .max(20, 'Name is too long (max 20 characters)')\r\n        .matches(/^[A-Za-z\\s]+$/, 'Must only contain letters A-Z'),\r\n        BSB: yup.string()\r\n        .required('Required')\r\n        .length(6, 'Must be 6 characters from 0-9 only')\r\n        .matches(/^[0-9]+$/, 'Must only include numbers 0-9'),\r\n        accNum: yup.string()\r\n        .required('Required')\r\n        .min(6, 'Min 6 characters from 0-9 only')\r\n        .max(10, 'Max 10 characters from 0-9 only')\r\n        .matches(/^[0-9]+$/, 'Must only include numbers 0-9')\r\n    })\r\n\r\n    const registerContact = (values, {resetForm}) => {\r\n\r\n        const contactInfo = {\r\n            id: Date.now(),\r\n            name: values.contactName,\r\n            BSB: values.BSB,\r\n            accountNum: values.accNum,\r\n            total: 5000\r\n        };\r\n\r\n        handleAddContact(contactInfo);\r\n\r\n        resetForm();\r\n    };\r\n\r\n    const initialValuesFormik = {\r\n            contactName: '',\r\n            BSB: '',\r\n            accNum: ''\r\n    }\r\n    \r\n    \r\n    return (\r\n        <div className={panelOpen \r\n            ? `${styles.backgroundOpen}`\r\n            : `${styles.backgroundClosed} ${themedStyles[theme[1]]}`}>\r\n            <div \r\n                onClick={togglePanel}\r\n                className={panelOpen \r\n                ? styles.topPanelOpen\r\n                : styles.topPanelClosed}>\r\n                <button \r\n                    className={styles.toggleButton}>{panelOpen \r\n                    ? <i className=\"fas fa-minus\"></i>\r\n                    : <i className=\"fas fa-plus\"></i>}\r\n                </button>\r\n                <div style={fontSizeLge}>\r\n                    Add a New Contact \r\n                </div>\r\n            </div>\r\n            {panelOpen && \r\n            <Formik\r\n                initialValues={initialValuesFormik}\r\n                onSubmit={registerContact}\r\n                validationSchema={validationSchemaFormik}\r\n                >\r\n                {formik => {\r\n                    return(\r\n                        <Form>\r\n                        <motion.div \r\n                             initial={animations ? {opacity: 0} : null}\r\n                            animate={animations ? {opacity: 1} : null}\r\n                            transition={animations ? { duration: 1 }: null}\r\n                            className={`${styles.innerContainer} ${themedStyles[theme[1]]}`}>\r\n                            <div \r\n                                className={styles.nameDiv}\r\n                                style={fontSizeMed}>\r\n                                <ErrorMessage name=\"contactName\">\r\n                                    { (errorMsg) => \r\n                                    <div \r\n                                        className={styles.errorMessage}\r\n                                        style={fontSizeSml}>\r\n                                        {errorMsg}\r\n                                    </div>}\r\n                                </ErrorMessage>\r\n                                <label htmlFor=\"contactName\">Name: </label>\r\n                                <Field type=\"text\" name=\"contactName\" id=\"contactName\" \r\n                                    className={styles.inputBox}/>\r\n                            </div>\r\n                            <div \r\n                                className={styles.BSBDiv}\r\n                                style={fontSizeMed}>\r\n                                <ErrorMessage name=\"BSB\">\r\n                                    { (errorMsg) => \r\n                                    <div \r\n                                        className={styles.errorMessage}\r\n                                        style={fontSizeSml}>\r\n                                        {errorMsg}\r\n                                    </div>}\r\n                                </ErrorMessage>\r\n                                <label htmlFor=\"BSB\">BSB: </label>\r\n                                <Field type=\"text\" name=\"BSB\" id=\"BSB\" \r\n                                    className={styles.inputBox}/>\r\n                            </div>\r\n                            <div \r\n                                className={styles.accountNumberDiv}\r\n                                style={fontSizeMed}>\r\n                                <ErrorMessage name=\"accNum\">\r\n                                    { (errorMsg) => \r\n                                    <div \r\n                                        className={styles.errorMessage}\r\n                                        style={fontSizeSml}>\r\n                                        {errorMsg}\r\n                                    </div>}\r\n                                </ErrorMessage>\r\n                                <label htmlFor=\"accNum\">Account Number: </label>\r\n                                <Field type=\"text\" name=\"accNum\" id=\"accNum\"\r\n                                    className={styles.inputBox}/>\r\n                            </div>\r\n                            <button\r\n                                className={styles.addContactButton} \r\n                                type=\"submit\"\r\n                                disabled={!formik.isValid}>Add Contact</button>\r\n                        </motion.div>\r\n                        </Form>\r\n                    )\r\n                }}\r\n            </Formik>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AddContact;","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\n// import components\r\nimport Navbar from './Navbar';\r\nimport AddressBook from './AddressBook';\r\nimport TransferForm from './TransferForm';\r\nimport AddContact from './AddContact';\r\n\r\nimport styles from '../styles/transfers.module.css';\r\nimport themedStyles from '../styles/themes.module.css';\r\n\r\nconst Transfers = ({fontSize, theme, animations,\r\n    unreadMessages, \r\n    transferTo, setTransferTo, \r\n    transferAmount, setTransferAmount,\r\n    contacts,\r\n    insufficientFunds,\r\n    transferReceipt,\r\n    handleCloseReceipt,\r\n    handleAddContact,\r\n    handleDeleteContact,\r\n    handleSelectContact\r\n    }) => {\r\n\r\n    return (\r\n        <>\r\n            <Navbar\r\n                fontSize={fontSize}\r\n                theme={theme}\r\n                animations={animations}\r\n                unreadMessages={unreadMessages}\r\n                currentPage={\"transfers-page\"}/>\r\n            <div className={`${styles.background} ${themedStyles[theme[0]]} ${themedStyles[theme[3]]}`}>\r\n                <div className={`${styles.innerContainer} ${themedStyles[theme[1]]}`}>\r\n                    <AddressBook\r\n                        theme={theme}\r\n                        fontSize={fontSize}\r\n                        animations={animations}\r\n                        setTransferTo={setTransferTo}\r\n                        contacts={contacts}\r\n                        handleDeleteContact={handleDeleteContact}\r\n                        handleSelectContact={handleSelectContact}/>\r\n                    <motion.div\r\n                        initial={animations ? {opacity: 0} : null}\r\n                        animate={animations ? {\r\n                            opacity: 1,\r\n                            transition: {delay: 0.2, duration: 1}\r\n                        } : null}>\r\n                        <AddContact\r\n                            theme={theme}\r\n                            fontSize={fontSize}\r\n                            animations={animations}\r\n                            handleAddContact={handleAddContact} />\r\n                        <TransferForm \r\n                            theme={theme}\r\n                            transferTo={transferTo}\r\n                            fontSize={fontSize}\r\n                            transferAmount={transferAmount}\r\n                            setTransferAmount={setTransferAmount}\r\n                            insufficientFunds={insufficientFunds}\r\n                            transferReceipt={transferReceipt}\r\n                            handleCloseReceipt={handleCloseReceipt}/>\r\n                    </motion.div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Transfers;\r\n","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\n// import components\r\nimport Navbar from './Navbar';\r\n\r\nimport themedStyles from '../styles/themes.module.css';\r\nimport styles from '../styles/settings.module.css';\r\n\r\nconst Settings = ( {fontSize, setFontSize,\r\n    theme, setTheme,\r\n    animations, setAnimations, \r\n    unreadMessages}) => {\r\n\r\n    // modify sizes of fonts based on device width\r\n    const DEVICE_WIDTH = document.documentElement.clientWidth;\r\n\r\n    const changeFontSize = (val) => {\r\n        if (DEVICE_WIDTH < 320) {\r\n            let screenModifier = 0.5;\r\n            setFontSize([`${val*screenModifier-0.8}rem`, `${val*screenModifier}rem`, \r\n            `${val*screenModifier+0.2}rem`,`${val*screenModifier+0.3}rem`])\r\n        } else if (DEVICE_WIDTH >= 320 && DEVICE_WIDTH < 640) {\r\n            let screenModifier = 0.7;\r\n            setFontSize([`${val*screenModifier-0.2}rem`, `${val*screenModifier}rem`, \r\n            `${val*screenModifier+0.1}rem`,`${val*screenModifier+0.3}rem`])\r\n        } else {\r\n            let screenModifier = 1.0;\r\n            setFontSize([`${val*screenModifier-0.2}rem`, `${val*screenModifier}rem`, \r\n            `${val*screenModifier+0.2}rem`,`${val*screenModifier+0.8}rem`])\r\n        }\r\n    };\r\n    \r\n    const changeTheme = (val) => {\r\n        setTheme([`${val}0`, `${val}1`, `${val}2`, `${val}3`])\r\n    };\r\n\r\n    const toggleAnimations = (val) => {\r\n        setAnimations(val)\r\n    };\r\n\r\n\r\n    // font sizes used in this component\r\n    const fontSizeMed = {fontSize: `${fontSize[1]}`};\r\n    const fontSizeLge = {fontSize: `${fontSize[2]}`};\r\n    const fontSizeXL = {fontSize: `${fontSize[3]}`};\r\n    \r\n    return (\r\n        <>\r\n            <Navbar\r\n                theme={theme}\r\n                fontSize={fontSize}\r\n                animations={animations ? true : false}\r\n                unreadMessages={unreadMessages}\r\n                currentPage={\"settings-page\"}/>\r\n            <div className={`${styles.background} ${themedStyles[theme[0]]} ${themedStyles[theme[3]]}`}>\r\n                <div className={`${styles.settingsBox} ${themedStyles[theme[1]]}`}>\r\n                    <div style={fontSizeXL}\r\n                            className={`${styles.heading} ${themedStyles[theme[2]]}`}>Settings</div>\r\n                    <motion.div\r\n                        initial={animations ? {opacity: 0} : {opacity: 1}}\r\n                        animate={{opacity: 1}}\r\n                        transition={{ duration: 0.5}} >\r\n                        <div className={styles.fontSizeContainer}>\r\n                            <div className={styles.optionBoxTitle}>\r\n                                <h4 style={fontSizeLge}>Font Size:</h4>\r\n                            </div>\r\n                            <div className={styles.optionBox}>\r\n                                <button type=\"button\" onClick={() => changeFontSize(0.8)}\r\n                                    className={styles.optionButton}\r\n                                    style={fontSize[1] === '0.8rem' || fontSize[1] === '0.5599999999999999rem' || fontSize[1] === '0.4rem'\r\n                                    ? {opacity: 1, fontWeight: \"bold\", fontSize: `${fontSizeMed.fontSize}`} \r\n                                    : {opacity: 0.7, fontSize: `${fontSizeMed.fontSize}`}}>Small</button>\r\n                            </div>\r\n                            <div className={styles.optionBox}>\r\n                                <button type=\"button\" onClick={() => changeFontSize(1)}\r\n                                    className={styles.optionButton}\r\n                                    style={fontSize[1] === '1rem' || fontSize[1] === '0.7rem' || fontSize[1] === '0.5rem' \r\n                                    ? {opacity: 1, fontWeight: \"bold\", fontSize: `${fontSizeMed.fontSize}`} \r\n                                    : {opacity: 0.7, fontSize: `${fontSizeMed.fontSize}`}}>Medium</button>\r\n                            </div>\r\n                            <div className={styles.optionBox}>\r\n                                <button type=\"button\" onClick={() => changeFontSize(1.2)}\r\n                                    className={styles.optionButton}\r\n                                    style={fontSize[1] === '1.2rem' || fontSize[1] === '0.84rem' || fontSize[1] === '0.6rem' \r\n                                    ? {opacity: 1, fontWeight: \"bold\", fontSize: `${fontSizeMed.fontSize}`} \r\n                                    : {opacity: 0.7,  fontSize: `${fontSizeMed.fontSize}`}}>Large</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.themeContainer}>\r\n                            <div className={styles.optionBoxTitle}>\r\n                                <h4 style={fontSizeLge}>Theme:</h4>\r\n                            </div>\r\n                            <div className={styles.optionBox}>\r\n                                <button type=\"button\" onClick={() => changeTheme('yellow')}\r\n                                    className={styles.optionButton}\r\n                                    style={theme[0] === 'yellow0' \r\n                                    ? {opacity: 1, fontWeight: \"bold\", fontSize: `${fontSizeMed.fontSize}`} \r\n                                    : {opacity: 0.7, fontSize: `${fontSizeMed.fontSize}`}}>Yellow</button>\r\n                            </div>\r\n                            <div className={styles.optionBox}>\r\n                                <button type=\"button\" onClick={() => changeTheme('blue')}\r\n                                    className={styles.optionButton}\r\n                                    style={theme[0] === 'blue0' \r\n                                    ? {opacity: 1, fontWeight: \"bold\", fontSize: `${fontSizeMed.fontSize}`} \r\n                                    : {opacity: 0.7, fontSize: `${fontSizeMed.fontSize}`}}>Blue</button>\r\n                            </div>\r\n                            <div className={styles.optionBox}>\r\n                                <button type=\"button\" onClick={() => changeTheme('orange')}\r\n                                    className={styles.optionButton}\r\n                                    style={theme[0] === 'orange0' \r\n                                    ? {opacity: 1, fontWeight: \"bold\", fontSize: `${fontSizeMed.fontSize}`} \r\n                                    : {opacity: 0.7, fontSize: `${fontSizeMed.fontSize}`}}>Orange</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.animationsContainer}>\r\n                            <div className={styles.optionBoxTitle}>\r\n                                <h4 style={fontSizeLge}>Animations:</h4>\r\n                            </div>\r\n                            <div className={styles.optionBox}>\r\n                                <button type=\"button\" onClick={() => toggleAnimations(true)}\r\n                                    className={styles.optionButton}\r\n                                    style={animations === true\r\n                                    ? {opacity: 1, fontWeight: \"bold\", fontSize: `${fontSizeMed.fontSize}`} \r\n                                    : {opacity: 0.7, fontSize: `${fontSizeMed.fontSize}`}}>On</button>\r\n                            </div>\r\n                            <div className={styles.optionBox}>\r\n                                <button type=\"button\" onClick={() => toggleAnimations(false)}\r\n                                    className={styles.optionButton}\r\n                                    style={animations === false\r\n                                    ? {opacity: 1, fontWeight: \"bold\", fontSize: `${fontSizeMed.fontSize}`} \r\n                                    : {opacity: 0.7, fontSize: `${fontSizeMed.fontSize}`}}>Off</button>\r\n                            </div>\r\n                            <div className={styles.optionBox}></div>\r\n                        </div>\r\n                    </motion.div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Settings;","\r\nconst showCurrentTime = () => {\r\n    const currentTime = new Date();\r\n    return currentTime.toLocaleString('en-AU', \r\n        {dateStyle: \"short\", \r\n        timeStyle: \"short\"});\r\n};\r\n\r\nexport default showCurrentTime;","import './App.css';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport React, {useState, useEffect} from 'react';\n\n// Import components\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport ConfirmRegistration from './components/ConfirmRegistration';\nimport Home from './components/Home';\nimport Messages from './components/Messages';\nimport Accounts from './components/Accounts';\nimport Transfers from './components/Transfers';\nimport Settings from './components/Settings';\n\nimport showCurrentTime from './functions/showCurrentTime';\n\nfunction App() {\n\n    // MISC\n    const [errorFromServer, setErrorFromServer] = useState(false);\n    const [deviceWidth, setDeviceWidth] = useState();\n\n    // ACCOUNTS AND TRANSFERS\n    const [transferTo, setTransferTo] = useState('');\n    const [transferAmount, setTransferAmount] = useState(0);\n    const [insufficientFunds, setInsufficientFunds] = useState(false);\n    const [transferReceipt, setTransferReceipt] = useState(false);\n\n    const checkIfAccountsStored = () => {\n        return localStorage.getItem('accounts')\n            ? JSON.parse(localStorage.getItem('accounts'))\n            : [{\n                id: 0,\n                name: 'Everyday Spending',\n                accountNum: '1234-5678',\n                BSB: '123-456',\n                total: 1000\n                }, {\n                id: 1,\n                name: 'Savings Account',\n                accountNum: '2345-6789',\n                BSB: '234-567',\n                total: 53912\n                }\n            ]\n    };\n    const [accounts, setAccounts] = useState(checkIfAccountsStored());\n\n    const checkIfContactsStored = () => {\n        return localStorage.getItem('contacts')\n            ? JSON.parse(localStorage.getItem('contacts'))\n            : [\n            accounts[0],\n            {\n                id: 2,\n                name: 'Bob Smith',\n                accountNum: '2222-3333',\n                BSB: '222-333',\n                total: 1000\n            }, {\n                id: 3,\n                name: 'Jane Doe',\n                accountNum: '5555-6666',\n                BSB: '555-666',\n                total: 2000\n                }\n            ]       \n    };\n    const [contacts, setContacts] = useState(checkIfContactsStored());\n\n    useEffect(() => {\n        localStorage.setItem('accounts', JSON.stringify(accounts))\n    }, [accounts])\n\n    // need to fix modifying state directly here\n    const checkName = () => {\n        for (let i=1; i < contacts.length; i++) {\n            if (transferTo === contacts[i].name) {\n                if (accounts[0].total - parseFloat(transferAmount) >= 0) {\n                    setInsufficientFunds(false)\n                    contacts[i].total += parseFloat(transferAmount)\n                    accounts[0].total -= parseFloat(transferAmount)\n                    contacts[0].total -= parseFloat(transferAmount)\n                    setAccounts([...accounts])\n                    setContacts([...contacts])\n                    setTransferReceipt(true);\n                } else {\n                    setInsufficientFunds(true);\n                }\n            }\n        }\n        \n        if (transferTo === accounts[1].name) {\n            if (accounts[0].total - parseFloat(transferAmount) >= 0) {\n                setInsufficientFunds(false)\n                accounts[1].total += parseFloat(transferAmount)\n                accounts[0].total -= parseFloat(transferAmount)\n                contacts[0].total -= parseFloat(transferAmount)\n                setAccounts([...accounts])\n                setContacts([...contacts])\n                setTransferReceipt(true);\n            } else {\n                setInsufficientFunds(true)\n            }\n        } else if (transferTo === accounts[0].name) {\n            if (accounts[1].total - parseFloat(transferAmount) >= 0) {\n                setInsufficientFunds(false)\n                accounts[0].total += parseFloat(transferAmount)\n                accounts[1].total -= parseFloat(transferAmount)\n                contacts[0].total += parseFloat(transferAmount)\n                setAccounts([...accounts])\n                setContacts([...contacts])\n                setTransferReceipt(true);\n            } else {\n                setInsufficientFunds(true)\n            }\n        }\n    }\n\n    useEffect(() => {\n        localStorage.setItem('contacts', JSON.stringify(contacts))\n    }, [contacts]);\n\n    const handleAddContact = (contactInfo) => {\n        setContacts([...contacts, {\n            id: contactInfo.id, \n            name: contactInfo.name,\n            accountNum: contactInfo.accountNum,\n            BSB: contactInfo.BSB,\n            total: contactInfo.total}\n        ]);\n        setMessages([...messages, \n            {   \n                id: Date.now(), // to give unique ID\n                read: false,\n                favourite: false,\n                message: `You added ${contactInfo.name} to your address book`,\n                timestamp: showCurrentTime()\n            }])\n    };\n\n    const handleCloseReceipt = () => {\n        setTransferReceipt(false);\n        setTransferTo('');\n        setTransferAmount(0);\n    };\n\n    const handleSelectContact = (name) => {\n        setTransferTo(name);\n    };\n\n    const handleDeleteContact = (id, event) => {\n        const doubleCheckDeleteContact = window.confirm(\"Are you sure you want to delete this contact from your address book?\")\n        if (doubleCheckDeleteContact) {\n            setContacts(contacts.filter(contact => contact.id !== id)) \n        }\n        event.stopPropagation(); // stop from choosing clicked account as transfer name\n        setTransferTo(''); // clear transfer state\n    };\n\n\n\n\n    // MESSAGES\n    const [messages, setMessages] = useState(\n        localStorage.getItem('messages')\n        ? JSON.parse(localStorage.getItem('messages'))\n        : [{\n            id: 0,\n            read: false,\n            favourite: false,\n            message: \"Welcome to the banking application! \"\n        }, {\n            id: 1,\n            read: false,\n            favourite: false,\n            message: \"You can transfer to other accounts on the 'Transfer' page.\"\n        }, {\n            id: 2,\n            read: false,\n            favourite: false,\n            message: `You can change the color theme, font size,\n                    and toggle animations on the 'Settings' page.`\n        }, {\n            id: 3,\n            read: false,\n            favourite: false,\n            message: `Some data is stored in browser local storage and will\n                        be reset if local storage is cleared.`\n        }\n    ]);\n        // tally unread messages\n    const findUnreadMessages = () => {\n        return messages.filter(message => message.read === false).length\n    }\n    const [unreadMessages,setUnreadMessages] = useState(findUnreadMessages());\n       // update messages\n    const handleRead = (pickedId) => {\n    const isSelected = messages.findIndex(messages => messages.id === pickedId);\n    const messagesCopy = [...messages];\n        messagesCopy[isSelected].read = !messagesCopy[isSelected].read;\n        setMessages(messagesCopy);\n    };\n\n    const handleFavourite = (pickedId) => {\n        const isSelected = messages.findIndex(messages => messages.id === pickedId);\n        const messagesCopy = [...messages];\n        messagesCopy[isSelected].favourite = !messagesCopy[isSelected].favourite;\n        setMessages(messagesCopy);\n    };\n\n    const handleDelete = (pickedId) => {\n        setMessages(messages.filter(messages => messages.id !== pickedId));\n    };\n\n    useEffect(() => {\n        setUnreadMessages(findUnreadMessages())\n        localStorage.setItem('messages', JSON.stringify(messages))\n    }, [messages]);\n\n    useEffect(()=> {\n        setInsufficientFunds('');\n        checkName();\n    }, [transferAmount]);\n\n    useEffect(() => {\n        (transferAmount !== 0 && transferTo !== '' && insufficientFunds === false)\n        ? setMessages([...messages, \n            {   \n                id: Date.now(), // to give unique ID\n                read: false,\n                favourite: false,\n                message: `You transferred $${transferAmount} to ${transferTo}`,\n                timestamp: showCurrentTime()\n            }])\n        : setMessages([...messages])\n    }, [insufficientFunds])\n\n    // set font size based on device width\n    useEffect(() => {\n        setDeviceWidth(document.documentElement.clientWidth)\n        setFontSize(\n            deviceWidth < 320\n            ? ['-0.3rem', '0.5rem', '0.7rem', '0.8rem']\n            : deviceWidth >=320 && deviceWidth < 640\n            ? ['0.49999999999999994rem', '0.7rem', '1.0rem', '1.2rem']\n            : ['0.8rem', '1rem', '1.2rem', '1.8rem']\n        )\n    }, deviceWidth);\n\n    // SETTINGS\n    const checkIfThemeStored = () => {\n        return localStorage.getItem('theme')\n            ? localStorage.getItem('theme').split(',')\n            : ['yellow0', 'yellow1', 'yellow2', 'yellow3']\n    };\n\n    const checkIfFontSizeStored = () => {\n        return localStorage.getItem('fontSize')\n            ? localStorage.getItem('fontSize').split(',')\n            : ['0.8rem', '1rem', '1.2rem', '1.8rem']\n    };\n\n    const checkIfAnimationsStored = () => {\n        return localStorage.getItem('animations')\n            ? JSON.parse(localStorage.getItem('animations'))\n            : true\n    };\n\n        // checks local storage to see if user on same browser has set font/theme already  \n    const [fontSize, setFontSize] = useState(checkIfFontSizeStored());\n    const [theme, setTheme] = useState(checkIfThemeStored());\n    const [animations, setAnimations] = useState(checkIfAnimationsStored());\n\n    useEffect(() => {\n        localStorage.setItem('fontSize', fontSize)\n        }, [fontSize]);\n    useEffect(() => {\n        localStorage.setItem('theme', theme)\n        }, [theme]);\n    useEffect(() => {\n        localStorage.setItem('animations', animations)\n        }, [animations]);\n    \n\n    return (\n        <Router>\n            <div className=\"App\">\n                <Switch>\n                    <Route path=\"/home-page\">\n                        <Home \n                            fontSize={fontSize}\n                            theme={theme}\n                            animations={animations}\n                            total={accounts[0].total}\n                            name={accounts[0].name}\n                            unreadMessages={unreadMessages}/>\n                    </Route>\n                    <Route path=\"/messages-page\">\n                        <Messages\n                            fontSize={fontSize}\n                            theme={theme}\n                            animations={animations}\n                            messages={messages}\n                            setMessages={setMessages}\n                            unreadMessages={unreadMessages}\n                            handleRead={handleRead}\n                            handleFavourite={handleFavourite}\n                            handleDelete={handleDelete}/>\n                    </Route>\n                    <Route path=\"/accounts-page\">\n                        <Accounts \n                            fontSize={fontSize}\n                            theme={theme}\n                            animations={animations}\n                            accounts={accounts}\n                            unreadMessages={unreadMessages}\n                            transferTo={transferTo}\n                            setTransferTo={setTransferTo}\n                            transferAmount={transferAmount}\n                            setTransferAmount={setTransferAmount}\n                            insufficientFunds={insufficientFunds}\n                            transferReceipt={transferReceipt}\n                            handleCloseReceipt={handleCloseReceipt}\n                            handleSelectContact={handleSelectContact}/>\n                    </Route>\n                    <Route path=\"/transfers-page\">\n                        <Transfers\n                            fontSize={fontSize}\n                            theme={theme}\n                            animations={animations}\n                            unreadMessages={unreadMessages}\n                            transferTo={transferTo}\n                            setTransferTo={setTransferTo}\n                            setTransferAmount={setTransferAmount}\n                            contacts={contacts}\n                            insufficientFunds={insufficientFunds}\n                            transferAmount={transferAmount}\n                            transferReceipt={transferReceipt}\n                            setTransferReceipt={transferReceipt}\n                            handleCloseReceipt={handleCloseReceipt}\n                            handleAddContact={handleAddContact}\n                            handleDeleteContact={handleDeleteContact}\n                            handleSelectContact={handleSelectContact}\n                            />\n                    </Route>\n                    <Route path=\"/settings-page\">\n                        <Settings\n                        fontSize={fontSize}\n                        setFontSize={setFontSize}\n                        theme={theme}\n                        setTheme={setTheme}\n                        animations={animations}\n                        setAnimations={setAnimations}\n                        unreadMessages={unreadMessages}/>\n                    </Route>\n                    <Route path=\"/confirm-registration-page\">\n                        <ConfirmRegistration\n                            errorFromServer={errorFromServer}\n                            setErrorFromServer={setErrorFromServer}/>\n                    </Route>\n                    <Route path=\"/register-page\">\n                        <Register\n                        setErrorFromServer={setErrorFromServer}/>\n                    </Route>\n                    <Route path=\"/\">\n                        <Login />\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"home_background__14tBh\",\"contentBox\":\"home_contentBox__VF9tp\",\"welcome\":\"home_welcome__3jivZ\",\"accountInfoBox\":\"home_accountInfoBox__1LPWF\",\"accountNameDiv\":\"home_accountNameDiv__25tu3\",\"accountName\":\"home_accountName__2CjpV\",\"accountNameValue\":\"home_accountNameValue__7pV8i\",\"accountTotalDiv\":\"home_accountTotalDiv__1aBz9\",\"accountTotal\":\"home_accountTotal__2ipA4\",\"accountTotalValue\":\"home_accountTotalValue__o4pcD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"accountBox\":\"singleAccount_accountBox__1Hmz5\",\"accountName\":\"singleAccount_accountName__imzsS\",\"bottomHalf\":\"singleAccount_bottomHalf__3SqDX\",\"accountDetailsAndDeleteDiv\":\"singleAccount_accountDetailsAndDeleteDiv__2IQWO\",\"accountDetails\":\"singleAccount_accountDetails__1EN8s\",\"BSB\":\"singleAccount_BSB__3FU2o\",\"accountNum\":\"singleAccount_accountNum__Kgfvr\",\"deleteButton\":\"singleAccount_deleteButton__16dv4\",\"accountTotal\":\"singleAccount_accountTotal__3od1-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"transferForm_background__Uh9MO\",\"transferToDiv\":\"transferForm_transferToDiv__1c200\",\"transferTo\":\"transferForm_transferTo__2_N2A\",\"bottomHalf\":\"transferForm_bottomHalf__1qYte\",\"amountDiv\":\"transferForm_amountDiv__oTgyg\",\"dollarDiv\":\"transferForm_dollarDiv__2AH2M\",\"inputBox\":\"transferForm_inputBox__a4E05\",\"buttonDiv\":\"transferForm_buttonDiv__1yhZN\",\"transferFundsButton\":\"transferForm_transferFundsButton__3uz4x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"accounts_background__3UAtp\",\"heading\":\"accounts_heading__FgrhE\",\"accountsList\":\"accounts_accountsList__1UaB8\",\"listItem\":\"accounts_listItem__3WqRy\",\"totalFundsDiv\":\"accounts_totalFundsDiv__3Gez8\",\"totalBox\":\"accounts_totalBox__2Xpev\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"confirmRegistration_background__LkzL2\",\"heading\":\"confirmRegistration_heading__3obGZ\",\"outerContainer\":\"confirmRegistration_outerContainer__Pg-4A\",\"loginLink\":\"confirmRegistration_loginLink__12J_M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"transferReceipt_background__u5UB5\",\"outerContainer\":\"transferReceipt_outerContainer__3n_qv\",\"closeButton\":\"transferReceipt_closeButton__ralOO\",\"innerContainer\":\"transferReceipt_innerContainer__3iY6R\",\"transferredToName\":\"transferReceipt_transferredToName__2IeQ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"settings_background__mXVAh\",\"heading\":\"settings_heading__21KsT\",\"settingsBox\":\"settings_settingsBox__3M624\",\"fontSizeContainer\":\"settings_fontSizeContainer__3PHXO\",\"themeContainer\":\"settings_themeContainer__3hCSe\",\"animationsContainer\":\"settings_animationsContainer__17dtq\",\"optionBoxTitle\":\"settings_optionBoxTitle__36_9u\",\"optionBox\":\"settings_optionBox__3ViBB\",\"optionButton\":\"settings_optionButton__1Mouz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"messages_background__1L6YB\",\"heading\":\"messages_heading__3wlxG\",\"messageList\":\"messages_messageList__2tF29\",\"messageContainer\":\"messages_messageContainer__3jioR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"addressBook_heading__3lXH4\",\"ownAccountDiv\":\"addressBook_ownAccountDiv__26XgP\",\"contactDiv\":\"addressBook_contactDiv__3A33V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"register_background__10o4-\",\"heading\":\"register_heading__1uRj_\",\"outerContainer\":\"register_outerContainer__t7fZT\",\"innerContainer\":\"register_innerContainer__2jP0V\",\"form\":\"register_form__px25j\",\"emailAndPasswordDiv\":\"register_emailAndPasswordDiv__3Gxt8\",\"registerButton\":\"register_registerButton__3w-Az\",\"registerButtonBlocked\":\"register_registerButtonBlocked__1p2Ig\",\"inputBox\":\"register_inputBox__1duZi\",\"labels\":\"register_labels__1K1Cv\",\"loginText\":\"register_loginText__MTv3_\",\"loginLink\":\"register_loginLink__3VSPD\",\"errorMessage\":\"register_errorMessage__1jaiE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navContainer\":\"navbar_navContainer__32dwM\",\"navList\":\"navbar_navList__1z2FJ\",\"bankIcon\":\"navbar_bankIcon__iRO8r\",\"logoLink\":\"navbar_logoLink__j3lox\",\"linkList\":\"navbar_linkList__2PTUC\",\"picked\":\"navbar_picked__2Mq7A\",\"unreadMessagesNav\":\"navbar_unreadMessagesNav__23VCy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"transfers_background__3U4m4\",\"innerContainer\":\"transfers_innerContainer__blPE3\"};"],"sourceRoot":""}